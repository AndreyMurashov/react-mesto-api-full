{"ast":null,"code":"export const BASE_URL = 'https://localhost:3001';\n\nconst parseResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(parseResponse);\n};\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(parseResponse);\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(parseResponse);\n};","map":{"version":3,"names":["BASE_URL","parseResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","login","getContent","token","authorization"],"sources":["C:/OpenServer/domains/react-mesto-api-full/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://localhost:3001';\n\nconst parseResponse = (res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({email, password})\n        })\n        .then(parseResponse)\n};\n\nexport const login = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({email, password})\n        })\n        .then(parseResponse)\n};\n\nexport const getContent = (token) => {\n    return fetch (`${BASE_URL}/users/me`, {\n            headers: {\n                authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(parseResponse)\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,wBAAjB;;AAEP,MAAMC,aAAa,GAAIC,GAAD,IAAS;EAC3B,IAAIA,GAAG,CAACC,EAAR,EAAY;IACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACD;;EACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD,CALH;;AAQA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACzC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IAC3BY,MAAM,EAAE,MADmB;IAE3BC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAFkB;IAM3BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACP,KAAD;MAAQC;IAAR,CAAf;EANqB,CAAvB,CAAL,CAQFO,IARE,CAQGhB,aARH,CAAP;AASH,CAVM;AAYP,OAAO,MAAMiB,KAAK,GAAG,CAACT,KAAD,EAAQC,QAAR,KAAqB;EACtC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IAC3BY,MAAM,EAAE,MADmB;IAE3BC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFkB;IAK3BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACP,KAAD;MAAQC;IAAR,CAAf;EALqB,CAAvB,CAAL,CAOFO,IAPE,CAOGhB,aAPH,CAAP;AAQH,CATM;AAWP,OAAO,MAAMkB,UAAU,GAAIC,KAAD,IAAW;EACjC,OAAOT,KAAK,CAAG,GAAEX,QAAS,WAAd,EAA0B;IAC9Ba,OAAO,EAAE;MACLQ,aAAa,EAAG,UAASD,KAAM,EAD1B;MAEL,gBAAgB;IAFX;EADqB,CAA1B,CAAL,CAMFH,IANE,CAMGhB,aANH,CAAP;AAOH,CARM"},"metadata":{},"sourceType":"module"}