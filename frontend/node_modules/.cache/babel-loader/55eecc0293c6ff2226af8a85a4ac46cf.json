{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _parseResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  }\n\n  redUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._parseResponse(res));\n  }\n\n  redAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatarURL\n      })\n    }).then(res => this._parseResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  }\n\n  addCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._parseResponse(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: `${!isLiked ? 'DELETE' : 'PUT'}`,\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"http://localhost:3001\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_parseResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","redUserInfo","data","method","body","JSON","stringify","name","about","redAvatar","avatar","avatarURL","getInitialCards","addCard","link","changeLikeCardStatus","cardId","isLiked","removeLike","removeCard","api"],"sources":["C:/OpenServer/domains/react-mesto-api-full/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _parseResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then((res) => this._parseResponse(res));\n  }\n\n  redUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => this._parseResponse(res));\n  }\n\n  redAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatarURL,\n      }),\n    }).then((res) => this._parseResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then((res) => this._parseResponse(res));\n  }\n\n  addCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then((res) => this._parseResponse(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: `${!isLiked ? 'DELETE' : 'PUT'}`,\n      headers: this._headers,\n    }).then((res) => this._parseResponse(res));\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._parseResponse(res));\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._parseResponse(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"http://localhost:3001\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}